问题描述

如下图所示，3 x 3 的格子中填写了一些整数。
+--*--+--+
|10* 1|52|
+--****--+
|20|30* 1|
*******--+
| 1| 2| 3|
+--+--+--+

我们沿着图中的星号线剪开，得到两个部分，每个部分的数字和都是60。

本题的要求就是请你编程判定：对给定的m x n 的格子中的整数，是否可以分割为两个部分，使得这两个区域的数字和相等。

如果存在多种解答，请输出包含左上角格子的那个区域包含的格子的最小数目。

如果无法分割，则输出 0。

输入格式
程序先读入两个整数 m n 用空格分割 (m,n<10)。

表示表格的宽度和高度。

接下来是n行，每行m个正整数，用空格分开。每个整数不大于10000。

输出格式
输出一个整数，表示在所有解中，包含左上角的分割区可能包含的最小的格子数目。
样例输入1
3 3
10 1 52
20 30 1
1 2 3
样例输出1
3
样例输入2
4 3
1 1 1 1
1 30 80 2
1 1 1 100
样例输出2
10


思路：
既然要求输出包含左上角格子的那个区域包含的格子的最小数目，我们可以从左上角格子开始进行搜索。
如果存在一种剪法使得这两个区域的数字和相等，那么这两个区域的数字之和一定都是所有数字之和的1/2 ，
根据这个特性可以在输入过程中先计算出输入的所有数字之和sum，
通过比较某一区域的数字之和是否是sum的1/2即可知道两个区域的数字和是否相等，大大的简化了计算。

每一个格子处最多有四种移动方向：右上左下，可以设计一个函数判断从当前格子处向某个方向移动是否会越界，
如果不会越界则在此方向上递归进行深度优先遍历，
遍历过程中如果当前遍历过的所有数字之和（即为包含左上角格子的区域的所有数字之和）等于sum/2，
那么这一剪法就符合要求，更新包含左上角格子的那个区域包含的格子的最小数目。

所有数字遍历完成后，按要求输出即可。