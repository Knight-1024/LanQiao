问题描述

今盒子里有n个小球，A、B两人轮流从盒中取球，每个人都可以看到另一个人取了多少个，
也可以看到盒中还剩下多少个，并且两人都很聪明，不会做出错误的判断。

我们约定：
每个人从盒子中取出的球的数目必须是：1，3，7或者8个。
轮到某一方取球时不能弃权！
A先取球，然后双方交替取球，直到取完。
被迫拿到最后一个球的一方为负方（输方）

请编程确定出在双方都不判断失误的情况下，对于特定的初始球数，A是否能赢？

程序运行时，从标准输入获得数据，其格式如下：
先是一个整数n(n<100)，表示接下来有n个整数。然后是n个整数，每个占一行（整数<10000），表示初始球数。
程序则输出n行，表示A的输赢情况（输为0，赢为1）。

例如，用户输入：
4
1
2
10
18

则程序应该输出：
0
1
1
0

思路：已知每人最多能取1，3，7或者8个,那么，如果球总数=必输的情况+（1，3，7或者8个）
即是甲拿走是1，3，7或者8个球，剩下的必输的情况就交给了乙，那么就用递推方法，
已经知道球数为1的时候甲必输，那么就依次类退，将必输的标记为1，赢的标记为0。然后就可以输出对应的球数甲会不会赢

选择策略1：如果拿走之后只剩一个，那么就拿它
选择策略2：如果都不是，那该拿多少？拿递归后能够赢的那个